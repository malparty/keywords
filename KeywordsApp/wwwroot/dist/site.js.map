{"version":3,"sources":["webpack://clientapp/./src/js/components/loader-ajax.js","webpack://clientapp/./src/js/components/parser-updates.js","webpack://clientapp/./src/js/screens/uploadForm.js","webpack://clientapp/webpack/bootstrap","webpack://clientapp/webpack/runtime/compat get default export","webpack://clientapp/webpack/runtime/define property getters","webpack://clientapp/webpack/runtime/hasOwnProperty shorthand","webpack://clientapp/webpack/runtime/make namespace object","webpack://clientapp/./src/js/site.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;AClBY;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;;;;;;;;;;ACzBH;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,6BAA6B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;UChFD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACN4C;AACH;AACJ","file":"site.js","sourcesContent":["/// SectionDataLoader\r\n/// Enable to load section content from ajax query\r\n/// <section data-load-ajax=\"#URL\">#LOADING MSG</section>\r\nclass SectionDataLoader {\r\n  initLoader = () => {\r\n    $('section[data-load-ajax]').map((index, elt) => {\r\n      var element = $(elt);\r\n      element.load(element.data('load-ajax'), (rsp, status) => {\r\n        if (status == 'error') {\r\n          element.html('<b>Error:</b> Could not load component');\r\n          element.addClass('text-danger');\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n$(function () {\r\n  new SectionDataLoader().initLoader();\r\n});\r\n","'use strict';\r\n\r\nvar connection = new signalR.HubConnectionBuilder().withUrl('/parser').build();\r\n\r\nconnection.on('KeywordStatusUpdate', function (user, message) {\r\n  console.log('YEAAAAH!!!');\r\n  console.log(user);\r\n  console.log(message);\r\n  var msg = message\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;');\r\n  var encodedMsg = user + ' KeywordStatusUpdate ' + msg;\r\n  alert(encodedMsg);\r\n});\r\n\r\nconnection\r\n  .start()\r\n  .then(function () {\r\n    $('#signalRBadge').removeClass('badge-light');\r\n    $('#signalRBadge').addClass('badge-success');\r\n    $('#signalRBadge').attr('title', 'SignalR connected!');\r\n  })\r\n  .catch(function (err) {\r\n    return console.error(err.toString());\r\n  });\r\n","class UploadForm {\r\n  MAX_UPLOAD_SIZE = 10000; // 10kb\r\n  form = $('.csv-form');\r\n  initForm = () => {\r\n    this.form.change(() => {\r\n      const errorMsgElt = this.form.find('.csv-form-error-msg');\r\n      const fileNameElt = this.form.find('.csv-form-file-name');\r\n      const csvFileInput = this.form.find('.csv-form-file-input');\r\n      const uploadedMsgElt = this.form.find('.csv-form-uploaded-msg');\r\n      // Reset texts\r\n      errorMsgElt.fadeOut();\r\n      uploadedMsgElt.fadeOut();\r\n      errorMsgElt.html('');\r\n      fileNameElt.html('');\r\n      fileNameElt.removeClass('text-danger');\r\n\r\n      if (csvFileInput[0].files.length > 0) {\r\n        const file = csvFileInput[0].files[0];\r\n\r\n        // Limit to less than 1mb\r\n        if (file.size > this.MAX_UPLOAD_SIZE) {\r\n          // File too big.\r\n          errorMsgElt.html(\r\n            `Please select a file under ${this.MAX_UPLOAD_SIZE / 10000}Kb.`\r\n          );\r\n          errorMsgElt.fadeIn(250);\r\n          fileNameElt.addClass('text-danger');\r\n        }\r\n        // Ensure extension is '.csv'\r\n        else if (file.name.match(/\\.[0-9a-z]+$/i)[0] != '.csv') {\r\n          // Wrong file extension\r\n          errorMsgElt.html(`Please select a .csv file.`);\r\n          errorMsgElt.fadeIn(250);\r\n          fileNameElt.addClass('text-danger');\r\n        } else {\r\n          uploadedMsgElt.fadeIn(250);\r\n          // Submit form\r\n          this.submitForm();\r\n        }\r\n        fileNameElt.html(file.name);\r\n      }\r\n    });\r\n  };\r\n\r\n  submitForm = () => {\r\n    const data = new FormData(this.form[0]);\r\n    $.ajax({\r\n      type: 'POST',\r\n      enctype: 'multipart/form-data',\r\n      url: this.form.attr('action'),\r\n      data: data,\r\n      processData: false,\r\n      contentType: false,\r\n      cache: false,\r\n      timeout: 600000,\r\n      success: function (data) {\r\n        $('#uploadFormContainer').html(data);\r\n        const uploadForm = new UploadForm();\r\n        uploadForm.initForm();\r\n        const newFileId = $('#previousFileId').val();\r\n        // Load newly created card\r\n        uploadForm.loadNewCard(newFileId);\r\n      },\r\n      error: function (e) {\r\n        console.log('ERROR : ', e);\r\n      },\r\n    });\r\n  };\r\n\r\n  loadNewCard = (newFileId) => {\r\n    const url = $('#csvFilesList').data('url');\r\n    const container = $('#csvFilesListContainer');\r\n    $.post(url, { fileId: newFileId }, (data) => {\r\n      container.prepend(data);\r\n      container.children().last().hide();\r\n    });\r\n  };\r\n}\r\n$(function () {\r\n  new UploadForm().initForm();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../js/components/parser-updates.js';\r\nimport '../js/components/loader-ajax.js';\r\nimport '../js/screens/uploadForm.js';\r\n"],"sourceRoot":""}